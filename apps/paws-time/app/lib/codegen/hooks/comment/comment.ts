/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * BASIC PAWSTIME API
 * OpenAPI spec version: v1
 */
import {
  useMutation
} from '@tanstack/react-query'
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult
} from '@tanstack/react-query'
import axios from 'axios'
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  ApiResponseVoid,
  CreateCommentReqDto
} from '../../dtos'



/**
 * ÎåìÍ∏Ä ÏÉùÏÑ± Í∏∞Îä•
 * @summary ÎåìÍ∏Ä ÏÉùÏÑ±
 */
export const createComment = (
    postId: number,
    createCommentReqDto: CreateCommentReqDto, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<ApiResponseVoid>> => {
    
    return axios.post(
      `/${postId}/comments`,
      createCommentReqDto,options
    );
  }



export const getCreateCommentMutationOptions = <TError = AxiosError<unknown>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof createComment>>, TError,{postId: number;data: CreateCommentReqDto}, TContext>, axios?: AxiosRequestConfig}
): UseMutationOptions<Awaited<ReturnType<typeof createComment>>, TError,{postId: number;data: CreateCommentReqDto}, TContext> => {
const {mutation: mutationOptions, axios: axiosOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof createComment>>, {postId: number;data: CreateCommentReqDto}> = (props) => {
          const {postId,data} = props ?? {};

          return  createComment(postId,data,axiosOptions)
        }

        


  return  { mutationFn, ...mutationOptions }}

    export type CreateCommentMutationResult = NonNullable<Awaited<ReturnType<typeof createComment>>>
    export type CreateCommentMutationBody = CreateCommentReqDto
    export type CreateCommentMutationError = AxiosError<unknown>

    /**
 * @summary ÎåìÍ∏Ä ÏÉùÏÑ±
 */
export const useCreateComment = <TError = AxiosError<unknown>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof createComment>>, TError,{postId: number;data: CreateCommentReqDto}, TContext>, axios?: AxiosRequestConfig}
): UseMutationResult<
        Awaited<ReturnType<typeof createComment>>,
        TError,
        {postId: number;data: CreateCommentReqDto},
        TContext
      > => {

      const mutationOptions = getCreateCommentMutationOptions(options);

      return useMutation(mutationOptions);
    }
    